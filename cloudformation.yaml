AWSTemplateFormatVersion: 2010-09-09

Parameters:

  UrsHostname:
    Type: String
    AllowedValues:
    - https://urs.earthdata.nasa.gov
    - https://uat.urs.earthdata.nasa.gov
    Default: https://urs.earthdata.nasa.gov

  UrsTokenUri:
    Type: String
    Default: /oauth/token

  UrsClientId:
    Type: String

  UrsClientPassword:
    Type: String
    NoEcho: true

  CookieName:
    Type: String
    Default: datapool-session

  CookieDomain:
    Type: String
    Default: .asf.alaska.edu

  CookieDurationInSeconds:
    Type: Number
    MinValue: 0
    Default: 86400

  PrivateKey:
    Type: String
    NoEcho: true

  DomainName:
    Type: String

  CertificateArn:
    Type: String

Outputs:

  ApiEndpoint:
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"

Resources:

  OauthStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Name: !Sub "${AWS::StackName}-oauth"
        UrsHostname: !Ref UrsHostname
        UrsTokenUri: !Ref UrsTokenUri
        UrsClientId: !Ref UrsClientId
        UrsClientPassword: !Ref UrsClientPassword
        UrsRedirectUri: !Sub "https://${DomainName}/oauth"
        CookieName: !Ref CookieName
        CookieDomain: !Ref CookieDomain
        CookieDurationInSeconds: !Ref CookieDurationInSeconds
        PrivateKey: !Ref PrivateKey
      TemplateURL: oauth/cloudformation.yaml

  CustomDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref DomainName
      CertificateArn: !Ref CertificateArn

  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref CustomDomainName
      RestApiId: !Ref RestApi

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref AWS::StackName
      Body:
        openapi: 3.0.1
        info:
          title: oauth
          version: 0.0.1
        paths:
          /oauth:
            get:
              parameters:
              - name: code
                in: query
                required: true
              - name: state
                in: query
                required: true
              responses:
                '307':
                  description: success
                default:
                  description: error
              x-amazon-apigateway-request-validator: parameters-only
              x-amazon-apigateway-integration:
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OauthStack.Outputs.LambdaArn}/invocations"
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehvaior: when_no_match
                responses:
                  default:
                    statusCode: 200
        x-amazon-apigateway-request-validators:
          parameters-only:
            validateRequestParameters: true
            validateRequestBody: false

  DeploymentREPLACE_ME:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref RestApi

  Stage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: oauth
      RestApiId: !Ref RestApi
      DeploymentId: !Ref DeploymentREPLACE_ME

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt OauthStack.Outputs.LambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*"
